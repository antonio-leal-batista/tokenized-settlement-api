{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "TokenizedMoney API",
    "description": "Tokenized Money Settlement API"
  },
  "host": "104.154.147.42:8080",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/deploy": {
      "post": {
        "tags": [
          "Deploy"
        ],
        "summary": "Register a new institution",
        "description": "Deploy an ERC-20 Interoperable Token and TornadoCash Smart Contract",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "Institution name, symbol and initial supply",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "default": "Institution 1"
                },
                "symbol": {
                  "type": "string",
                  "default": "IN1"
                },
                "initialSupply": {
                  "type": "integer",
                  "default": 10
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "name": "Institution 1",
                "symbol": "IN1",
                "tokenAddress": "0x9EA8C207F764C789219cd84b0986e5B2480F0deE",
                "tornadoAddress": "0xE1c90892DC25598B5493869457eFaccf6BA5B4d6",
                "totalSupply": "10"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/connect": {
      "post": {
        "tags": [
          "Connect"
        ],
        "summary": "Connect two institutions",
        "description": "Allow an institution to interact with another",
        "operationId": "",
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "(from) and (to) institutions addresses",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "fromAddress": {
                  "type": "string",
                  "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621B"
                },
                "toAddress": {
                  "type": "string",
                  "default": "0x121A39A5154A5CD852C357D8267928e731F64658"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": true
            }
          },
          "500": {
            "description": "Error",
            "examples": {
              "application/json": false
            }
          }
        }
      }
    },
    "/balance/{token}/{account}": {
      "get": {
        "tags": [
          "Balance"
        ],
        "summary": "Get balance of an account",
        "description": "Get the account balance in the token",
        "operationId": "",
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "description": "InteroperableToken Address",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621B"
          },
          {
            "name": "account",
            "description": "Account Address",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "0x4222ec932c5a68b80e71f4ddebb069fa02518b8a"
          }
        ],
        "responses": {
          "200": {
            "description": "Status",
            "examples": {
              "application/json": {
                "balance": 10
              }
            }
          },
          "500": {
            "description": "Invalid account or institution address"
          }
        }
      }
    },
    "/mint": {
      "post": {
        "tags": [
          "Mint"
        ],
        "summary": "Mint tokens to an institution",
        "description": "Mint tokens to an institution's account",
        "operationId": "",
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "institution token address and amount to mint",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tokenAddress": {
                  "type": "string",
                  "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621B"
                },
                "amount": {
                  "type": "integer",
                  "default": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "totalSupply": "10"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/transferInstitution1": {
      "post": {
        "tags": [
          "Create the deposits"
        ],
        "summary": "Transfer tokens between institutions",
        "description": "Generate a ZKP transfer operation",
        "operationId": "",
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "from and to address contract, amount",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "fromAddress": {
                  "type": "string",
                  "default": "0x121A39A5154A5CD852C357D8267928e731F64658"
                },
                "toAddress": {
                  "type": "string",
                  "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621B"
                },
                "amount": {
                  "type": "integer",
                  "default": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "preimage": "fcfa6cd87ae9a65b3332487d225d603efc74b6b1af9d2f54e2d26cf4647ad4805eff86d7965f712ac966223180baab29b1cbfb6555de6e6dfe95683fe0a0",
                "nullifierHash": "0x2736ba0d30b309c9d28ed48a605d3e34d2b695dbc9b6b5a88a05d79e8262ec2d"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/transferInstitution2": {
      "post": {
        "tags": [
          "Transfer Institution"
        ],
        "summary": "Perform a withdrawal of deposits",
        "description": "Perform a withdrawal to an institution token address. Grants the role to the account if not have yet",
        "operationId": "",
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "Institution token address, deposit preimage and deposit nullifier hash",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tokenAddress": {
                  "type": "string",
                  "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621B"
                },
                "preimage": {
                  "type": "string",
                  "default": "fcfa6cd87ae9a65b3332487d225d603efc74b6b1af9d2f54e2d26cf4647ad4805eff86d7965f712ac966223180baab29b1cbfb6555de6e6dfe95683fe0a0"
                },
                "nullifierHash": {
                  "type": "string",
                  "default": "0x2736ba0d30b309c9d28ed48a605d3e34d2b695dbc9b6b5a88a05d79e8262ec2d"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": true
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/addCustomer": {
      "post": {
        "tags": [
          "Add Customer"
        ],
        "summary": "Add a customer to an institution",
        "description": "Grants the AUTHORIZED ROLE to the account be able to receive transfers from the institution",
        "operationId": "",
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "Institution token address, account address",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tokenAddress": {
                  "type": "string",
                  "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621B"
                },
                "account": {
                  "type": "string",
                  "default": "0x90ff845f5db553415ce34dd6dd815692a29e6662"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": true
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/transferCustomer": {
      "post": {
        "tags": [
          "Transfer Customer"
        ],
        "summary": "Transfer tokens from institution to a registered customer",
        "description": "Generate a virtual deposit and perform a withdrawal to a specific registered customer account",
        "operationId": "",
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "Institution token address, amount and customer account",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tokenAddress": {
                  "type": "string",
                  "default": "0x121A39A5154A5CD852C357D8267928e731F64658"
                },
                "amount": {
                  "type": "integer",
                  "default": 1
                },
                "account": {
                  "type": "string",
                  "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621B"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    }
  }
}